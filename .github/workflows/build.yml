name: "Build"

on:
  push:
    branches:
      - "**"
    tags:
      - "**"

jobs:

  version:
    name: "Version definition"
    runs-on: ubuntu-latest
    steps:

      - name: "Define the Docker image version"
        run: |
          if [[ "${GITHUB_REF}" =~ 'refs/tags/' ]]
          then
            echo DEFAULT_IMAGE_VERSION=${GITHUB_REF#refs/tags/} >> $GITHUB_ENV
            echo ALPINE_IMAGE_VERSION=${GITHUB_REF#refs/tags/}-alpine >> $GITHUB_ENV
          else
            echo DEFAULT_IMAGE_VERSION=latest >> $GITHUB_ENV
            echo ALPINE_IMAGE_VERSION=alpine >> $GITHUB_ENV
          fi

      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Short SHA calculation"
        uses: benjlevesque/short-sha@v3.0

      - name: "Publication check"
        id: publicationCheck
        uses: actions/github-script@v7
        with:
          # language=JS
          script:
            const isMaster = ${{ github.ref == 'refs/heads/master' }};
            const isTag = ${{ startsWith(github.ref, 'refs/tags/') }};
            const shouldPublish = isMaster || isTag;
            console.debug(`isMaster = ${isMaster}`);
            console.debug(`isTag = ${isTag}`);
            console.debug(`shouldPublish = ${shouldPublish}`);
            core.setOutput("shouldPublish", shouldPublish);

    outputs:
      default: ${{ env.DEFAULT_IMAGE_VERSION }}
      alpine: ${{ env.ALPINE_IMAGE_VERSION }}
      sha: ${{ env.SHA }}
      shouldPublish: ${{ steps.publicationCheck.outputs.shouldPublish }}

  build:
    name: "Docker image (${{ matrix.build.target }} - ${{ matrix.build.arch }})"
    strategy:
      matrix:
        build:
          - { target: default, arch: linux/amd64, runner: ubuntu-latest }
          - { target: default, arch: linux/arm64, runner: ubicloud-standard-2-arm }
          - { target: alpine, arch: linux/amd64,  runner: ubuntu-latest }
          - { target: alpine, arch: linux/arm64,  runner: ubicloud-standard-2-arm }
    runs-on: ${{ matrix.build.runner }}
    needs: version
    steps:

      - name: "Architecture tag"
        run: |
          ARCH=${{ matrix.build.arch }}
          TAG=${ARCH/\//-}
          echo TAG=$TAG >> $GITHUB_ENV

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "GitHub Container Registry authentication"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and push"
        uses: docker/build-push-action@v6
        with:
          push: ${{ needs.version.outputs.shouldPublish == 'true' }}
          tags: ghcr.io/xstefanox/dockteur:${{ needs.version.outputs.sha }}-${{ matrix.build.target }}-${{ env.TAG }}
          platforms: ${{ matrix.build.arch }}
          target: ${{ matrix.build.target }}

  multiarch:
    name: "Multiarch Docker image (${{ matrix.target }})"
    strategy:
      matrix:
        target:
          - default
          - alpine
    runs-on: ubuntu-latest
    if: needs.version.outputs.shouldPublish == 'true'
    needs:
      - version
      - build
    steps:

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "GitHub Container Registry authentication"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "DockerHub authentication"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Manifest creation"
        run: >
          docker buildx imagetools create
          --tag ghcr.io/xstefanox/dockteur:${{ needs.version.outputs.sha }}-${{ matrix.target }}
          ghcr.io/xstefanox/dockteur:${{ needs.version.outputs.sha }}-${{ matrix.target }}-linux-amd64
          ghcr.io/xstefanox/dockteur:${{ needs.version.outputs.sha }}-${{ matrix.target }}-linux-arm64

      - name: "Image publication"
        run: >
          docker buildx imagetools create
          --tag xstefanox/dockteur:${{ needs.version.outputs[matrix.target] }}
          ghcr.io/xstefanox/dockteur:${{ needs.version.outputs.sha }}-${{ matrix.target }}
